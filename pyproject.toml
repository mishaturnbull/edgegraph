[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]
name = "edgegraph"
requires-python = ">= 3.7"
dependencies = [
    "dill"
]
readme = "README.md"
license = {file = "LICENSE.txt"}
description = "Object oriented edge-vertex graph library."
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
foreign = [
    "pyvis"
]
full = [
    "edgegraph[foreign]"
]
development = [
    # documentation dependencies
    "sphinxcontrib-plantuml",
    "sphinx-copybutton",
    "sphinx-book-theme",
    "myst-parser",
    "tomlkit",

    # test dependencies
    "pytest",
    "coverage",
    "pytest-cov",
    "pytest-profiling",
    "pytest-randomly",
    "pytest-timeout",

    # code quality control
    # pylint is also needed for documentation
    "pylint",
    "black",
    "mypy",

    # and everything else
    "edgegraph[full]"
]
# hate having to do this, but twine requries cryptography which doesn't
# currently work on py3.13t and doesn't really have an expected date of when
# that can work.  in the mean time, the rest of the dependencies are fine, so
# separate out the pypi-publishing needs here
administer = [
    # build & upload to pypi dependencies
    "build",
    "twine",

    # and everything else
    "edgegraph[development]"
]

[project.urls]
Homepage = "https://edgegraph.readthedocs.io/en/latest/"
Repository = "https://github.com/mishaturnbull/edgegraph"

[tool.setuptools.dynamic]
version = {attr = "edgegraph.version.__version__"}

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "perf: really slow performance tests",
]
addopts = "--durations=5 -m 'not (slow or perf)'"
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.html]
show_contexts = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "def __repr__",
]

[tool.ruff]
line-length = 80
indent-width = 4

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint]

# see https://docs.astral.sh/ruff/rules/
select = [
    # defaults
    "E4", "E7", "E9", "F",

    # extras
    "A",        # don't shadow builtins
    "B",        # enable bugbear
    "COM",      # catch weird comma situations
    "PERF",     # performance hits
]

#    "EXE",      # shebang and permissions checks
#    "PT",       # pytest style control
#    "Q",        # quote controls
#    "SIM",      # code simplicity
#    "I",        # isort
#    "D",        # docstring checks & linting
#    "RUF",      # ruff-specific rules
#]

ignore = [
    # no blank line between function docstring and code.  removed due to author
    # preference.
    "D202",

    # requires 1 blank line before class docstring.  removed due to author
    # preference.
    "D203",

    # requires 1 blank line before class docstring.  incompatible with D211;
    # disabling this one due to author preference.
    "D211",

    # requires summary line on first line of docstring (with the quotes).
    # incompatible with D213; disabling this one due to author preference.
    "D212",

    # incompatible with ruff formatter
    "COM812",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # disabled due to https://github.com/astral-sh/ruff/issues/17386.  VERY
    # high rate of false positives in the test module
    "F821",

    # variable naming rules in unit tests are a bit more relaxed
    "E741",
]

[tool.mypy]
pretty = true
hide_error_codes = false
show_error_code_links = true

